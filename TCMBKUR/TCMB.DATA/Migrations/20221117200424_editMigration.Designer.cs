// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TCMB.DATA.Context;

namespace TCMB.DATA.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221117200424_editMigration")]
    partial class editMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("TCMB.DATA.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("TCMB.DATA.Models.Kurlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Kod")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Kurlar");
                });

            modelBuilder.Entity("TCMB.DATA.Models.RequestData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("RequestData");
                });

            modelBuilder.Entity("TCMB.DATA.Models.ResponseData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Hata")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ResponseData");
                });

            modelBuilder.Entity("TCMB.DATA.Models.ResponseDataKur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Adi")
                        .HasColumnType("text");

                    b.Property<decimal>("AlisKuru")
                        .HasColumnType("numeric");

                    b.Property<int?>("Birimi")
                        .HasColumnType("integer");

                    b.Property<string>("Kodu")
                        .HasColumnType("text");

                    b.Property<int>("RequestDataId")
                        .HasColumnType("integer");

                    b.Property<int?>("ResponseDataId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("RequestDataId");

                    b.HasIndex("ResponseDataId");

                    b.ToTable("ResponseDataKur");
                });

            modelBuilder.Entity("TCMB.DATA.Models.ResponseDataKur", b =>
                {
                    b.HasOne("TCMB.DATA.Models.RequestData", "RequestData")
                        .WithMany()
                        .HasForeignKey("RequestDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TCMB.DATA.Models.ResponseData", null)
                        .WithMany("Data")
                        .HasForeignKey("ResponseDataId");

                    b.Navigation("RequestData");
                });

            modelBuilder.Entity("TCMB.DATA.Models.ResponseData", b =>
                {
                    b.Navigation("Data");
                });
#pragma warning restore 612, 618
        }
    }
}
